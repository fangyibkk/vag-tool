#!/usr/bin/python

import numpy as np
import sys
from natsort import natsorted, ns

from os import listdir , makedirs
from os.path import isfile, isdir, join, exists

def ensure_directory(direc):
    return direc if direc.endswith('/') else direc + '/'

in_dir = ensure_directory(sys.argv[1])
dfa_pair_dir = ensure_directory(sys.argv[2])
alpha_path = sys.argv[3]
out_path = sys.argv[4]

alpha_list = ""
threshold = 0.5
qualified_imfs_list = []

filenames = [ file for file in listdir(in_dir) if file.endswith("txt") and not file.startswith("0") ]
filenames = natsorted( filenames, key=lambda y: y.lower() )
filenames = natsorted( filenames, alg=ns.IGNORECASE )
print '===> filenames are:'
print filenames

for f in filenames[:-1]:
    print 'reading dfa pair from: {0}'.format(dfa_pair_dir + f)
    s, F = np.genfromtxt(dfa_pair_dir + f, unpack=True)
    alpha = np.polyfit( s, F, 1 )[0]
    alpha_list += "at {0} alpha = {1}\n".format( f, alpha )

    if(alpha > threshold):
        qualified_imfs_list.append(f)
        
# outputing
f = open(alpha_path, 'w')
f.closed
f.write(alpha_list)
print 'finish writing alpha'

print qualified_imfs_list
for i, f in enumerate(qualified_imfs_list):
    if i==0:
        out_signal = np.loadtxt(in_dir + f.replace('.out', ''))
    else:
        out_signal += np.loadtxt(in_dir + f.replace('.out','') )
    
print 'write signal after dfa'
np.savetxt( out_path, out_signal )

